AN SDN APPROACH FOR EFFICIENT INTERNET BANDWIDTH UTILIZATION IN WIRELESS MESH NETWORKS


ABSTRACT
Wireless Mesh Networks (WMN) have been emerging in the last couple of years as a cost effective alternative to traditional wired access networks. IEEE 802.11s is the IEEE standard for Wireless Mesh Networks and is present in the Linux kernel in the form of open80211s (o11s). Currently, in o11s, every mesh node is associated with a maximum of one mesh gate. This type of single association directs the entire traffic from a node towards the mesh gate it is associated with. The gate's available bandwidth is shared by all its clients (nodes), and consequently, the throughput per client is reduced with an increase in the number of clients. Additionally, the mesh gate being common to many outbound paths, experiences a reduction in it’s effective link capacity due to the multipoint-to-point nature of the associations. By enabling multipoint-to-multipoint associations, this paper aims to improve the utilization of total available bandwidth by using multiple Internet access gateways inside a Wireless Mesh Network. This is achieved in a transparent manner without requiring any changes to applications. The overall load on the network is balanced across multiple gateways by using a traffic sensitive approach for gateway selection. Conventionally, in wireless networks, associating with multiple gateways requires multiple wireless NICs. Our approach moves away from this convention and uses a single wireless NIC to associate with multiple internet gateways, thereby reducing hardware costs.

INTRODUCTION

Wirless Mesh Networks have seen tremendous growth in the recent years by reducing the dependency on wired access networks and thereby have become a cost effective solution for large scale deployments. The emergence of community meshes, city wide meshes and rural deployments have demonstrated the benefits of Wireless Mesh Networks over existing networks. In addition to being self-healing and self-organising like conventional ad-hoc networks, WMNs have superseded these networks by providing the capability of range extenstion.

 A typical WMN combines a fixed network (backbone) and a mobile network (backhaul). For each WMN, there are mesh stations that implement the mesh facility acting as routers, forwarding traffic to or from other mesh nodes, or providing localised connectivity to stations(STA), devices that contain an IEEE 802.11-conformant medium access control (MAC) and physical layer (PHY) interface to the wireless medium (WM). Some of these routers, called mesh gates are directly connected to the outside network and provide access to one or more distribution systems, via the wireless medium for the mesh basic service set (MBSS).
 Open80211s is an open-source implementation of the recently ratified IEEE 802.11s wireless mesh standard. Open80211s was included in the linux kernel (release 2.6.26) to bring wireless mesh networking to commodity hardware supported by the kernel. It is the first open implementation of 802.11s to consolidate the numerous non-interoperable mesh protocols into one that is based on a standard specification (IEEE 802.11s).
 802.11s based networks use the Hybrid Wireless Mesh Protocol (HWMP) for L2 routing based on MAC addresses. HWMP provides both proactive path selection and reactive path selection. A mesh station that needs to transmit a frame to an unknown destination can dynamically discover the best path to this destination. Mesh stations can also proactively discover the MBSS and determine best paths to any point of the mesh cloud before needing to send any data frame.

 In order to connect to the outside network, the mesh nodes and stations in the WMNs form a layer 3 network by associating with a gateway present in the network. Traditionally each mesh node can only be associated with one of the available gateways. This type of single association directs the entire traffic from a node towards the mesh gate it is associated with. The gate's available bandwidth is shared by all its clients (nodes), and consequently, the throughput per client is reduced with an increase in the number of clients. Additionally, the mesh gate being common to many outbound paths, experiences a reduction in it’s effective link capacity due to the multipoint-to-point nature of the associations.

 WMNs are self-healing and self-configuring, but the Layer 3 associations in which mesh nodes are bound to only one gateway are not dynamic. This means that on failure of a mesh gate, the traffic flowing to the gateway through that mesh gate is dropped instead of being re-routed to another gateway which can be reached using the underlying L2 network.
 
 In order to overcome these shortcomings, this paper suggests an approach to effectively use the capabilties of 802.11s based wireless mesh networks to efficiently utilize the total available bandwidth by using multiple Internet access gateways present in the network. By enabling multipoint-to-multipoint associations, the overall load on the network is balanced across multiple gateways by using a traffic sensitive approach for gateway selection. The method routes the traffic on flow basis in order to maintain the integrity of the flow and avoid the overhead involved in reassembling the packets in case of TCP based traffic. This paper also describes a more fault tolerant approach to deal with unresponsive gateways. The entire flow meant for an inactive gateway is routed to an alternate gateway. The suggested approach also moves away from the convention of using multiple radios for throughput enhancement and uses a single wireless NIC to associate with multiple internet gateways, thereby reducing hardware costs.

BACKGROUND AND RELATED WORK
Reference [] presents a survey of wireless mesh networks. It discusses challenges that need to be overcome in order to leverage the benefits of this technology. It states that toplogy control algorithms are required to ensure reliable mesh connectivity and network self-organization.  Most applications of WMNs are broadband services with heterogeneous QoS requirements and therefore, in addition to end-to-end transmission delay and fairness, performance metrics such as delay jitter, throughput per node and packet loss ratios must be considered by the communication protocols in use. 

The overall throughput in a wireless mesh network can be increased by using multiple radios[]. Each radio is associated with one gateway and channels are selected where the frequency is diversified and high-throughput paths are available. There is a significant improvement in the throughput capacity, however the selection of channels proves to insufficient and cost intensive.

[] suggests the use of RANN frames in order to get all the gateways present in the Mesh Network. RANN frames can only be captured on an interface running in monitor mode as they are layer 2 frames. This leads to the reception of all Layer 2 frames which must then be inspected to filter out RANN frames. This filtering leads to higher use of the processor. The gateway selection process selects one default gateway which routes all the traffic for that node. When the default gateway is overloaded, a Change_Gateway request is sent to one of the associated nodes. The node then selects another gateway as it's default gateway, effectively using only a single gateway. 

IMPLEMENTATION AND PERFORMANCE EVALUATION

In order to efficiently utilize all available bandwidth in a WMN, various measures such as gate discovery, multipoint to multipoint associations, dynamic addition and removal of gateways, selection of gateways and fault tolerance need to be considered.

Advertisement of the gateway capbilities
Conventionally in open80211s, the presence of mesh gates is detected by a gate flag in the broadcasted Root Announcement frames. In our solution, the mesh gate timely broadcasts it's IP address and the set of capabilties. This information is used by the mesh nodes to maintain a record for each gateway, which is further used for gateway selection. 

Multi-gateway association
Every time a mesh node wants to start sending a new stream of data (socket creation) to a machine outside the local network, it does so via the best possible gate selected on the basis of the gate metrics and the type of information required to be sent. The node uses the available gateway records to decide the ideal gateway to be selected based on the kind of egress traffic. The gateway annotation on the packets pertaining to this flow are set to the chosen gateway. The flow is bound to the gateway and this mapping exists till the socket is transferring data. In case a gateway fails, all it's mappings are discarded.

Flow Identification
A unique key is required to differentiate flows from one another. Since a source port on a machine can only be used by one flow at a time, it serves as a unique identifier. The source port number is used to identify which packet belongs to which flow, thereby respecting the requirement of sending all packets of a specific flow through one gateway eliminating the overhead of packet reassembly.

#Stickiness is defined for pre existing flows so that a new gate coming up does not change the gateway
Addition and removal of gates dynamically
To maintain the dynamic nature of a mesh network, nodes and gates are allowed to leave and join the mesh network. This highlights the self healing and self configuring property of mesh networks.

While the flow of packets are being routed through the specific gateway, more gateways may come up which might provide a better path for the completion of the same request. In such a case, it is important to honour the previous mapping of the source port and the associated gateway as changing gateways will confuse the machine on the other end, which may regard it as a malicious flow of packets. This will result in packet drops at the other end of the socket and therefore needs to be avoided. Hence, a mapping table of which port is bound to which gateway on the local network is maintained. In case the port remains unused for a specific timeout interval, the mapping is then cleared.

In case a gateway goes down, no traffic destined for the outside network should be routed via it. The disppearance of a gate has been accounted for by the missing Layer 2 broadcasts received by the nodes. The nodes wait for a specified time out interval, after which the entry for a non broadcasting gate is removed. In case the gate comes back up, it will start broadcasting frames again and therefore can be used again for servicing requests.

Interoperability
The solution has been created with compatibility in mind with the existing o11s. This allows a mix of nodes, both vanilla o11s and the ones based on this solution, to coexist and work without hitches.

ARCHITECTURE DIAGRAM

Experiment
An experiment was carried out to emulate the working of this solution in a real network. Set up using o11s as the base network, there are four machines involved. A Client C, two gateways G1 and G2, and a server S. The client C cannot directly reach the server S and must communicate via either G1 or G2. Files are stored on the server S and the client C wants to download these files. The link capacities on either sides of both GW1 and GW2 are kept identical and varied from 100 KBPS to 1400 KBPS. Downloads are performed for each value of the link speed once with GW1, once with GW2 and ultimately with both GW1 and GW2 simultaneously. 

The graph below was created with experimental readings and it clearly shows gains in the network when download times are considered. It is evident from the graph that the gains are linear until the underlying hardware becomes a bottleneck. Since high speed devices are not always utilized to the maximum extent, linear gains can be achieved in most of the real world scenarios.

Results
Linear gains (bandwidth adds up) until the underlying hardware link becomes a bottleneck.


CONCLUSION

REFERENCES
